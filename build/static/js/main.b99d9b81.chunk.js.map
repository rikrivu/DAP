{"version":3,"sources":["Components/Shared/Header/Header.js","Components/Shared/Footer/Footer.js","Components/Nimbus/AnalysisOption.js","Components/Nimbus/FileInput.js","Components/Nimbus/Output.js","Pages/NIMBUS/nimbus.js","Components/Landingpage/Card.js","Pages/LandingPage/landingpage.js","Services/data-service.js","Pages/About/about.js","Pages/ContactUs/contactus.js","Pages/Infrastructure/infrastructure.js","Pages/Other tools/otherTools.js","router.js","index.js"],"names":["heading","color","fontSize","fontWeight","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","width","height","src","alt","Toggle","aria-controls","Collapse","id","Nav","className","Link","style","as","to","target","Footer","position","bottom","clear","marginTop","fluid","Date","getFullYear","AnalysisOption","props","state","value1","value2","value3","value4","value5","filename","loading","independent","dependent","max_depth","min_samples","handleChange","bind","handleChange2","handleChange3","handleSubmit","handleChange1","onSelect","onSelect2","onSelect3","onRemove","e1","this","setState","prevState","value","e2","e3","selectedList","removedItem","includes","name","options1","map","formdata","FormData","append","axios","async","crossDomain","url","method","headers","responseType","processData","data","then","response","console","log","status","Parameters","length","alert","catch","error","options","el","selectedItem","e","event","preventDefault","callback","formData","file","parentCallback","onSubmit","selector","displayValue","showCheckbox","columns","singleSelect","placeholder","type","onChange","React","Component","FileInput","useState","setColumns","setData","selectedFile","setSelectedFile","textAlign","accept","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","dataString","split","c","sheet_to_csv","header","readAsBinaryString","childData","buttonStyle","backgroundColor","border","padding","textDecoration","margin","cursor","marginLeft","tableStyle","marginRight","overFlow","overflowX","Output","handleClick","FileSaver","saveAs","rowdata","handleSelect","index","last","list","x","y","tabnames","Object","keys","tabledata","$","l","html","values","each","rowNumber","rowData","columnNumber","columnData","forceRenderTabPanel","key","Row","overflowY","Col","onClick","PureComponent","Nimbus","setFile","dataFrames","setdataFrames","dataLists","setdataLists","setLoading","Container","sm","md","lg","dataFrame","memo","cardStyle","backgroundImage","Card","bodyText","Landingpage","projects","setProjects","useEffect","fetch","res","json","createdLayout","useMemo","cards","rowlength","output","i","jsx","Array","push","createLayout","about","contactUs","infrastructure","otherTools","Accordion","defaultActiveKey","eventKey","Body","Router1","path","exact","component","About","ContactUs","Infrastructure","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b99d9b81.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst heading ={\r\n    color: \"white\",\r\n    fontSize: \"22px\",\r\n    fontWeight:\"bolder\",\r\n}\r\n/**\r\n * Describes the header component component on the website\r\n * @returns a visual representation of the header\r\n */\r\nfunction Header() {\r\n    return (\r\n        /* Using navbar component from React Bootstrap*/\r\n        <div>\r\n            <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n                <Navbar.Brand href=\"#home\"><img width=\"70\" height=\"70\" src=\"https://upload.wikimedia.org/wikipedia/commons/6/65/Black-logo-ghd.jpg\" alt=\"logo\"></img></Navbar.Brand>\r\n                {\r\n                    // Toggle menu - responsive hamburger menu\r\n                }\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"#\" style={heading}>Advanced Analytics</Nav.Link>\r\n                    \r\n                    </Nav>\r\n                    {\r\n                        // Links to other routes and websites\r\n                    }\r\n                    <Nav>\r\n                        <Nav.Link as={Link} to=\"/\">Home</Nav.Link> \r\n                        <Nav.Link href=\"https://nimbusdocs.azurewebsites.net\" target=\"_blank\">Nimbus Documentation</Nav.Link>\r\n                        <Nav.Link href=\"https://ghdnet.sharepoint.com/teams/DT-NA-Digital-Intelligence/Shared%20Documents/General/Infrastructure/master.pdf?CT=1617159401822&OR=ItemsView\" target=\"_blank\">Infra Blogs</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/about\">About</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/othertools\">Other Tools</Nav.Link>\r\n                        <Nav.Link as={Link} to=\"/contactus\">Contact Us</Nav.Link>\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n                </Navbar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from \"react\";\r\nimport '@fortawesome/fontawesome-free/css/all.min.css';\r\nimport 'bootstrap-css-only/css/bootstrap.min.css';\r\nimport 'mdbreact/dist/css/mdb.css';\r\nimport { MDBCol, MDBContainer, MDBRow, MDBFooter } from \"mdbreact\";\r\n\r\n/**\r\n * Describes the footer component component on the website\r\n * @returns a visual representation of the footer\r\n */\r\n\r\nconst Footer = () => {\r\n  return (\r\n    /* Using footer component from Material Design and Bootsrap(MDBReact)*/\r\n    <MDBFooter style={{position:\"relative\",bottom:\"0\" , clear:\"both\", marginTop:\"30vh\", width:\"100%\"}} color=\"unique-color-dark\" className=\"page-footer font-small pt-0\">\r\n      <div className=\"footer-copyright text-center py-3\">\r\n        <MDBContainer fluid>\r\n          &copy; {new Date().getFullYear()} Copyright: GHD<a href=\"#\">  </a>\r\n        </MDBContainer>\r\n      </div>\r\n    </MDBFooter>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React, { useState } from 'react';\nimport axios from \"axios\"; \nimport \"./AnalysisOption.css\"; \nimport { Multiselect } from \"multiselect-react-dropdown\";\n\n\n/**\n * Describes the input form on the website\n * @returns a visual representation of the input form\n */\n\nexport class AnalysisOption extends React.Component {\n  \n    constructor(props) {\n      super(props);\n      // Creating states and storing values in states\n      this.state = {\n        value1: [],\n        value2: [],\n        value3: '',\n        value4: '3',\n        value5: '0.05',\n        filename: 'report',\n        loading: false,\n        independent:'false',\n        dependent:'false',\n        max_depth:'false',\n        min_samples:'false',\n        \n      };\n      // Binding 'this' keyword to all the methods used\n      this.handleChange = this.handleChange.bind(this);\n      this.handleChange2 = this.handleChange2.bind(this);\n      this.handleChange3 = this.handleChange2.bind(this);\n      this.handleSubmit = this.handleSubmit.bind(this);\n      this.handleChange1 = this.handleChange1.bind(this)\n      this.onSelect = this.onSelect.bind(this)\n      this.onSelect2 = this.onSelect2.bind(this)\n      this.onSelect3 = this.onSelect3.bind(this)\n      this.onRemove = this.onRemove.bind(this)\n    }\n    \n    \n    // Method to handle event while user chooses elements from input dropdown menu\n    handleChange1(e1) {\n\n      this.setState(prevState => ({value4: [...prevState.value4, e1.target.value]}))\n    }\n    // Method to handle event while user chooses elements from input dropdown menu\n    \n    handleChange2(e2){\n      this.setState({ value4: e2.target.value})\n    }\n    // Method to handle event while user chooses elements from input dropdown menu\n    \n    handleChange3(e3){\n      this.setState({ value5: e3.target.value})\n    }\n    // Method to handle event while user removes elements from the selected elements list of the multiselect drop menus\n    onRemove(selectedList, removedItem) {\n       // If element from Type of Analysis list is removed:\n       if (this.state.value1.includes(removedItem.name)){\n          // Storing the names of selected items as a list\n          var options1 = selectedList.map(function (e2) { return e2.name; });\n          // Stroing the list as a state value\n          this.setState({ \n            value1 : options1\n          }) \n          // Creating formdata object to send it to the backend API\n          let formdata = new FormData();\n          // Adding the list of analyses selected\n          formdata.append(\"Input1\", options1);\n          // Making a POST request to the backend API with data as the formdata\n          axios({\n            async:\"true\",\n            crossDomain:\"true\",\n            url: 'https://nimbusrestapi.azurewebsites.net/analyses',\n            method: 'POST',\n          // Including all the requied headers\n          headers: { \n            \"Content-Type\": \"multipart/form-data\",\n            \"cache-control\": \"no-cache\",\n            \"Content-Disposition\": \"attachment;filename=raw_summ.xlsx\",\n            \"Postman-Token\": \"f1e5e023-d3d7-4039-aed6-524887ee1629\",\n            \"Response-Type\": 'blob',\n            responseType: 'blob'\n\n\n          },\n          processData: false,\n          data:formdata\n          })\n          // Promise object \n          .then(function (response) {\n            console.log(\"Result :\" + response);\n            // If a successful response from the API is received, then:\n            if (response.status==200){\n              // Set all the states to false\n              this.setState({independent:\"false\"})\n              this.setState({dependent:\"false\"})\n              this.setState({max_depth:\"false\"})\n              this.setState({min_samples:\"false\"})\n              // Set all the states to false if the Parameters array has no elements\n              if (response.data.Parameters.length==0){\n                this.setState({independent:\"false\"})\n                this.setState({dependent:\"false\"})\n                this.setState({max_depth:\"false\"})\n                this.setState({min_samples:\"false\"})\n              }\n              // Setting state of independent true if Parameters has \"ycol\" element\n              if (response.data.Parameters.includes(\"ycol\")){\n                this.setState({independent:\"true\"})\n              }\n              // Setting state of dependent true if Parameters has \"xcols\" element\n              if (response.data.Parameters.includes(\"xcols\")){\n                this.setState({dependent:\"true\"})\n              }\n              // Setting state of max_depth true if Parameters has \"max_depth\" element\n              if (response.data.Parameters.includes(\"max_depth\")){\n                this.setState({max_depth:\"true\"})\n              }\n              // Setting state of min_samples true if Parameters has \"min_samples_leaf\" element\n              if (response.data.Parameters.includes(\"min_samples_leaf\")){\n                this.setState({min_samples:\"true\"})\n              }\n            }\n            // Throw an error if it receives a faulty response from the API\n            else{\n              alert(\"Error - Change input and try again\");\n            }\n          }.bind(this))\n          // Throw an error if it receives a faulty response from the API\n          .catch(function (error) {\n            alert(\"Error - Change input and try again\");\n            console.log(\"Post Error : \" +error);\n          });\n\n       }\n       // If elements are removed from independent variables list:\n       else if (this.state.value2.includes(removedItem.name)) {\n          // Storing the names of selected items as a list\n          var options = selectedList.map(function (el) { return el.name; });\n          // Stroing the list as a state value\n          this.setState({ \n            value2 : options\n          }) \n       } \n\n  }\n    // Handling onSelect event for independent variables\n    onSelect(selectedList, selectedItem) {\n      // Storing the names of selected items as a list\n      var options = selectedList.map(function (el) { return el.name; });\n      // Stroing the list as a state value\n      this.setState({ \n        value2 : options\n      }) \n    \n    \n    }\n    // Handling onSelect event for Type of Analysis\n    onSelect3(selectedList, selectedItem) {\n      // Storing the names of selected items as a list\n      var options1 = selectedList.map(function (e2) { return e2.name; });\n      // Stroing the list as a state value\n      this.setState({ \n        value1 : options1\n      }) \n      // Creating formdata object to send it to the backend API\n      let formdata = new FormData();\n      // Adding the list of analyses selected\n      formdata.append(\"Input1\", options1);\n      // Making a POST request to the backend API with data as the formdata\n      axios({\n        async:\"true\",\n        crossDomain:\"true\",\n        url: 'https://nimbusrestapi.azurewebsites.net/analyses',\n        method: 'POST',\n      // Including all the required headers\n      headers: { \n        \"Content-Type\": \"multipart/form-data\",\n        \"cache-control\": \"no-cache\",\n        \"Content-Disposition\": \"attachment;filename=raw_summ.xlsx\",\n        \"Postman-Token\": \"f1e5e023-d3d7-4039-aed6-524887ee1629\",\n        \"Response-Type\": 'blob',\n        responseType: 'blob'\n\n\n      },\n      processData: false,\n      data:formdata\n      })\n      // Promise object\n      .then(function (response) {\n\n        console.log(\"Result :\" + response.data);\n        // If a successful response from the API is received, then:\n        if (response.status==200){\n          // Setting state of independent true if Parameters has \"ycol\" element\n          if (response.data.Parameters.includes(\"ycol\")){\n            this.setState({independent:\"true\"})\n          }\n          // Setting state of dependent true if Parameters has \"xcols\" element\n          if (response.data.Parameters.includes(\"xcols\")){\n            this.setState({dependent:\"true\"})\n          }\n          // Setting state of max_depth true if Parameters has \"max_depth\" element\n          if (response.data.Parameters.includes(\"max_depth\")){\n            this.setState({max_depth:\"true\"})\n          }\n          // Setting state of min_samples true if Parameters has \"min_samples_leaf\" element\n          if (response.data.Parameters.includes(\"min_samples_leaf\")){\n            this.setState({min_samples:\"true\"})\n          }\n        }\n        // Dialog box if it receives a faulty response from the API\n        else{\n          alert(\"Error - Change the input and try again\");\n        }\n      }.bind(this))\n      // Dialog box if it receives a faulty response from the API\n      .catch(function (error) {\n        alert(\"Error - Change the input and try again\");\n        console.log(\"Post Error : \" +error);\n      });\n    \n    \n    }\n    // Handling onSelect event for dependent variables\n    onSelect2(selectedList, selectedItem) {\n      // Stroing the list as a state value\n      this.setState({ \n        value3 : selectedItem.name\n      }) \n    \n    \n    }\n    // Handling hnadleChange event for the multiselect dropdown menyu\n    handleChange(e) {\n      // Stroing the list as a state value\n      this.setState({ \n        [e.target.name] :  e.target.value\n      }) \n    }\n    // Handling onSubmit event for the Submit button\n    handleSubmit(event) {\n      event.preventDefault();\n      if(this.state.value3==\"\" && this.state.dependent==\"true\"){\n        alert(\"Please select one dependent variable\")\n      }\n      else if(this.state.value2.length==0 && this.state.independent==\"true\"){\n        alert(\"Please select atleast one independent variable\")\n      }\n      else if(this.state.value1.length==0){\n        alert(\"Please select atleast one type of analysis\")\n      }\n      else if(this.state.value2.includes(this.state.value3)){\n        alert(\"Dependant and Independant variables cannot be the same\")\n      }\n      else{\n\n        this.state.loading=true;\n        this.props.callback(this.state.loading);\n        let formData = new FormData();\n        formData.append(\"Input1\", this.state.value1);\n        formData.append(\"Input2\", this.state.value2);\n        formData.append(\"Input3\", this.state.value3);\n        formData.append(\"Input4\", this.state.value4);\n        formData.append(\"Input5\", this.state.value5);\n        formData.append(\"File\", this.props.file);\n\n        axios({\n          async:\"true\",\n          crossDomain:\"true\",\n          url: 'https://nimbusrestapi.azurewebsites.net/analyse',\n          method: 'POST',\n\n        headers: { \n          \"Content-Type\": \"multipart/form-data\",\n          \"cache-control\": \"no-cache\",\n          \"Content-Disposition\": \"attachment;filename=raw_summ.xlsx\",\n          \"Postman-Token\": \"f1e5e023-d3d7-4039-aed6-524887ee1629\",\n          \"Response-Type\": 'blob',\n          responseType: 'blob'\n\n\n        },\n        processData: false,\n        data:formData\n        })\n        .then(function (response) {\n          if (response.status==200){\n            console.log(response)\n            this.setState({loading:false})\n            this.props.callback(this.state.loading);\n            this.state.filename=response.data.filename;\n            this.props.parentCallback(response.data);\n          }\n        }.bind(this))\n        .catch(function (error) {\n          this.state.loading=false;\n          this.props.callback(this.state.loading);\n          alert(\"Error occured while processing data on the server. Please contact the administrator for more details.\")\n          console.log(\"Post Error : \" +error);\n\n        }.bind(this));\n\n      }\n    }\n  \n    render() {\n        // Creating an array of different types of analysis\n        var staticArray= [\n          { name: \"Raw Summary\", selector: \"Raw Summary\" },\n          { name: \"Raw Summary Categorical\", selector: \"Raw Summary Categorical\" },\n          { name: \"Univariate\", selector: \"Univariate\" },\n          { name: \"Y-Summary Numerical\", selector: \"Y-Summary Numerical\" },\n          { name: \"Univariate Categorical\", selector: \"Univariate Categorical\" },\n          { name: \"Correlation\", selector: \"Correlation\" },\n          { name: \"Bivariate\", selector: \"Bivariate\" },\n          { name:\"Decision Tree\", selector: \"Decision Tree\"},\n          { name:\"Clustering Analysis\", selector:\"Clustering Analysis\"}\n        ]\n        \n      return (\n        \n        <div>\n        {\n          // Input form to include Type of Analysis, Dependent, Independent variables, Max Depth, Minimum Leaf Samples\n        }\n        <form onSubmit={this.handleSubmit}>\n           {\n             // Multiselect dropdown menu for Type of Analysis\n           }\n          <label className=\"spbt\">\n            Type of Analysis :  &nbsp;\n            \n            <Multiselect\n            name=\"value1\"\n            options={staticArray}\n            displayValue=\"name\"\n            onSelect={this.onSelect3}\n            onRemove={this.onRemove}\n            showCheckbox={true}    \n            />\n\n\n          </label>\n          {\n            // Multiselect dropdown menu for independent variables\n            // Rendering it only if independent state value is true\n          }\n          {\n           this.state.independent!=\"false\" &&\n          <label className=\"spbt\">\n            Independant Variables :\n            <Multiselect\n            onSelect={this.onSelect}\n            onRemove={this.onRemove}\n            options={this.props.columns}\n            displayValue=\"name\"\n            showCheckbox={true}    \n          />\n          </label >\n          }\n          <br></br>\n          {\n            // Single select dropdown menu for Dependent Variable\n            // Rendering it only if the dependent state value is true\n          }\n          {\n          this.state.dependent!=\"false\" &&\n          <label className=\"spbt\">\n            Dependant Variable :  &nbsp;\n            <Multiselect\n            name=\"value3\"\n            singleSelect\n            onSelect={this.onSelect2}\n            onRemove={this.onRemove}\n            options={this.props.columns}\n            displayValue=\"name\"\n            showCheckbox={true}    \n          />\n          </label>\n           }\n           <br></br>\n           {\n             // Textfield input for max depth, rendering it only if max_depth state value is true\n           }\n          {this.state.max_depth!='false' &&\n          <label className=\"spbt\">\n            Max Depth : &nbsp; <br></br>\n            <input className=\"input\" placeholder=\"3\" type=\"text\" onChange={this.handleChange2} />\n          </label>\n          }\n          <br></br>\n          {\n            // Textfield input for minimum leaf samples, rendering it only if min_samples state value is true\n          }\n          {\n          this.state.min_samples!='false' &&\n          <label className=\"spbt\">\n            Minimum Leaf Samples : &nbsp; <br></br>\n            <input className=\"input\" placeholder=\"0.05\" type=\"text\" onChange={this.handleChange3} />\n          </label>\n          }\n          <br></br>\n          {\n            // Rendering the submit button in the input form\n          }\n          <input type=\"submit\" value=\"Submit\" />\n        </form>\n        </div>\n      );\n    }\n  }\n\nexport default AnalysisOption;","import React, { useState} from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport App2 from './AnalysisOption';\r\n\r\n\r\n/**\r\n * Describes the file input section of the input form on the website\r\n * @returns a visual representation of the file input section\r\n */\r\n\r\nfunction FileInput(props) {\r\n  // State to store columns of the input csv file\r\n  const [columns, setColumns] = useState([]);\r\n  // State to store data of the input csv file\r\n  const [data, setData] = useState([]);\r\n  // State to store the input csv file\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n   \r\n  // Call back function to receive data from child component\r\n  const callbackFunction = (childData) => {\r\n    props.parentCallback(childData);\r\n}\r\n// Call back function to receive loading related data from child component\r\n  const childcallback = (childData) => {\r\n  props.callback(childData);\r\n\r\n}\r\n\r\n  // process CSV data\r\n  const processData = dataString => {\r\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\r\n    const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\r\n    \r\n    const list = [];\r\n    \r\n    // prepare columns list from headers\r\n    const columns = headers.map(c => ({\r\n      name: c,\r\n      selector: c,\r\n    }));\r\n    // Storing the values as state values\r\n    setData(list);\r\n    setColumns(columns);\r\n    \r\n    \r\n  }\r\n\r\n  // handle file upload\r\n  const handleFileUpload = e => {\r\n    const file = e.target.files[0];\r\n    setSelectedFile(file)\r\n    const reader = new FileReader();\r\n    reader.onload = (evt) => {\r\n      /* Parse data */\r\n      const bstr = evt.target.result;\r\n      const wb = XLSX.read(bstr, { type: 'binary' });\r\n      /* Get first worksheet */\r\n      const wsname = wb.SheetNames[0];\r\n      const ws = wb.Sheets[wsname];\r\n      /* Convert array of arrays */\r\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\r\n      processData(data);\r\n    };\r\n    reader.readAsBinaryString(file);\r\n  }\r\n    return (\r\n        <div style={{textAlign: \"center\"}}>\r\n            <h3>Select a CSV file</h3>\r\n                <br></br>\r\n                {\r\n                  // Rendering input file element on the EDA page\r\n                }\r\n                <input\r\n                  type=\"file\"\r\n                  accept=\".csv,.xlsx,.xls\"\r\n                  onChange={handleFileUpload}\r\n                  \r\n                />\r\n                <br></br>\r\n                <br></br>\r\n                {\r\n                  // Rendering AnalysisOption component\r\n                }\r\n                <App2 callback={childcallback} parentCallback={callbackFunction} columns={columns} data={data} file={selectedFile}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FileInput\r\n","import React, { Component, useState } from 'react';\r\nimport $ from 'jquery'\r\nimport {Tabs, Tab, TabList, TabPanel} from 'react-tabs'\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport './Output.css'\r\nimport FileSaver, { saveAs, fileSaver } from 'file-saver';\r\nimport Table from 'react-bootstrap/Table';\r\n\r\nconst buttonStyle=\r\n        {\r\n            backgroundColor: \"rgb(99, 81, 206)\",\r\n            border: \"none\",\r\n            color: \"white\",\r\n            padding: \"10px 28px\",\r\n            textDecoration: \"none\",\r\n            margin: \"10px 25px\",\r\n            cursor: \"pointer\",\r\n            marginLeft: \"40%\",\r\n            marginTop: \"60px\"\r\n          }\r\nconst tableStyle={\r\n        marginTop:\"30px\",\r\n        marginLeft:\"auto\",\r\n        marginRight:\"auto\",\r\n        textAlign: \"center\",\r\n        width: \"95%\",\r\n        height: \"100px\",\r\n        border: \"1px black solid\",\r\n        overFlow:\"scroll\",\r\n        overflowX: \"auto\",\r\n\r\n}\r\n\r\n/**\r\n * Describes the Ouput Window on the EDA webpage\r\n * @returns a visual representation of the output window\r\n */\r\n\r\nexport class Output extends React.PureComponent {\r\n    // Constructor\r\n    constructor(props) {\r\n        super(props);\r\n        // All the state values\r\n        this.state={\r\n          rowdata:\"\",\r\n          loading:false\r\n        }\r\n        // Binding 'this' keyword for different methods used\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n         \r\n      }\r\n      // Method to handle when tabs are clicked on\r\n      handleSelect(index, last) {\r\n        console.log('Selected tab: ' + index + ', Last tab: ' + last);\r\n      }\r\n      // Method to handle click of the button\r\n      handleClick = e => {\r\n        FileSaver.saveAs(\"https://nimbusrestapi.azurewebsites.net/results?name=\"+this.props.filename+\"&type=xlsx\");\r\n      \r\n      }\r\n    render() {\r\n        // Getting the row data(every row of a csv file) from parent element and storing it as a state value\r\n        this.state.rowdata=this.props.list\r\n        // Getting the keys and storing them as tabnames\r\n        let tabnames=Object.keys(this.props.tabledata);\r\n        // Getting the data for the first tab name\r\n        const htmlObject = $(this.props.tabledata[tabnames[0]])\r\n        // Creating three temporary variables\r\n        var x;\r\n        var y;\r\n        var z;\r\n        // For every tab name:\r\n        for (var l in tabnames){\r\n          // Creating an empty string\r\n          let html = \"\";\r\n          for (x in Object.values(this.state.rowdata)){\r\n              // Comparing and getting the value for that particular tab\r\n              if (x==l){\r\n                // Getting the corresponding value from the dictionary\r\n                y=(Object.values(this.state.rowdata))[x];\r\n                // For each loop to add each and every row value to the html string\r\n                $.each(y, function(rowNumber,rowData){\r\n                    console.log(rowNumber)\r\n                    \r\n                    if (rowNumber==0){\r\n                      html += \"<tr>\";\r\n                  $.each(rowData, function(columnNumber,columnData){\r\n \r\n                      html += \"<th>\"+columnData+\"</th>\";\r\n                  });\r\n                  html += \"</tr>\";\r\n                    }\r\n                    else{\r\n                      html += \"<tr>\";\r\n                      $.each(rowData, function(columnNumber,columnData){\r\n \r\n                        html += \"<td>\"+columnData+\"</td>\";\r\n                    });\r\n                    html += \"</tr>\";\r\n                    }\r\n                      \r\n                });\r\n              }\r\n            }\r\n            // Adding all the data to the corresponding table created\r\n            $(\"#\"+l).html(html);\r\n          }\r\n\r\n    return (\r\n      <div>\r\n          {\r\n            //Rendering tabs(react-tabs library) on the Ouput Window\r\n          }\r\n          <Tabs\r\n          onSelect={this.handleSelect}\r\n          forceRenderTabPanel={true}\r\n          >\r\n            {\r\n              // Creating tabs as per the data sent from the backend\r\n            }\r\n            <TabList>\r\n              {tabnames.map((value, index) => {\r\n                    return (\r\n                      <Tab key={index+\"tab\"}>{value}</Tab> \r\n                      \r\n                      \r\n                      \r\n                      )\r\n                  \r\n                  \r\n                  }\r\n                    \r\n              )}\r\n              </TabList>\r\n            {\r\n              // Creating tables accordingly for every tab\r\n              // Rendering the content on each tab\r\n            }\r\n            {tabnames.map((value, index) => {\r\n                    return (<TabPanel id={index+\"tabpanel\"} key={value}>\r\n                                          \r\n                <Row className=\"table\" style={{overflowY: \"auto\",overflowX: \"auto\",textAlign:\"center\",margin:\"auto\"}}>\r\n                  <Col>\r\n                        <table id={index} style={tableStyle}></table>\r\n                        </Col>\r\n                    </Row>\r\n                    </TabPanel>)}\r\n                    \r\n              )}\r\n\r\n          </Tabs>\r\n          {\r\n            // Button to download the excel file from the backend API\r\n          }\r\n          <button className=\"center\" onClick={this.handleClick} style={buttonStyle}>Download</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Output;","import React, { useState, useEffect } from 'react';\nimport Header from '../../Components/Shared/Header/Header';\nimport Footer from '../../Components/Shared/Footer/Footer';\nimport FileInput from '../../Components/Nimbus/FileInput';\nimport Output from '../../Components/Nimbus/Output';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row,  Col } from 'react-bootstrap';\nimport './nimbus.css';\n\n/**\n * Describes the webpage for EDA feature in DataMining module of Nimbus\n * @returns a visual representation of EDA tool\n */\n\nfunction Nimbus() {\n// Creating hook state to store the filename received from the backend API\nconst [file, setFile] = useState(null);\n// Creating hook state to store the dataframes received from the backend API\nconst [dataFrames, setdataFrames] = useState(null);\n// Creating hook state to store the lists of data received from the backend API\nconst [dataLists, setdataLists]=useState({\"\":\"\"});\n// Creating hook state to store the loading state\nconst [loading, setLoading] = useState(false);\n\n// Created a callback function to receive data from the child and store the data in respective states\nconst callbackFunction = (childData) => {\n\n    setdataFrames(childData.dataFrame)\n    setFile(childData[\"filename\"]);\n    setdataLists(childData.list)\n}\n\n// Created a callback function to receive data from the child and store loading data in its respective state\nconst childcallback = (childData) => {\n  setLoading(childData);\n}\n  \n  return (\n\n    <div style={{height:\"100%\"}}>\n      <Header />\n      {\n        //Using a container to hold all the components\n      }\n      <Container fluid>\n        <Row>\n          {\n            // Calling the FileInput component\n          }\n          <Col sm=\"4\" md=\"4\" lg=\"4\" className=\"column1\">\n              <div className=\"card\">\n                  <br></br>\n                  <br></br>\n                  <FileInput callback={childcallback} parentCallback={callbackFunction}/>\n              </div>\n          </Col>\n          <Col sm=\"8\" md=\"8\" lg=\"8\">\n              \n          {\n            // Output Window to display the results\n          }\n              <div className=\"card1\">\n                  <h3 style={{textAlign: \"center\"}}>Results</h3> \n                  {\n                    file==null && loading==false &&\n                    <h6 style={{textAlign: \"center\"}}>No Results to display</h6>\n                  }\n                  {\n                    // Checking for loading and if it is true, rendering loading component\n                  }\n                  {loading==true &&\n                  <div className=\"alertbox\">\n                    <img style={{textAlign:\"center\", marginLeft:\"auto\", marginRight:\"auto\"}} alt=\"Loading\" src=\"https://media.giphy.com/media/3oEjI6SIIHBdRxXI40/giphy.gif\"></img>\n                  </div>\n                  }\n                  {\n                    // Rendering the Output Component if it gets the correct data from backend API\n                  }\n                  { file!=null &&\n                  <Output filename={file} tabledata={dataFrames} list={dataLists}/>\n                  }\n              </div>\n              \n          </Col>\n        </Row>\n        \n        \n      </Container>\n      {\n        //Rendering the Footer component\n      }\n      <Footer style={{marginTop:\"20%\"}} className=\"footer\" /> \n      \n\n    </div>\n    \n    \n\n  );\n  \n\n}\n\nexport default Nimbus=React.memo(Nimbus);\n","import React from 'react'\r\nimport './Card.css'\r\n\r\nconst cardStyle=\r\n        {\r\n            backgroundImage: \"linear-gradient(20deg, rgb(84, 38, 191) 30%, rgba(84, 38, 191, 0) 130%)\",\r\n            color: \"white\",\r\n            border:\"none\",            \r\n            height:\"23rem\",\r\n            width:\"20rem\",\r\n            cursor: \"pointer\",\r\n            marginLeft:\"0\"\r\n          }\r\n\r\n/**\r\n * Describes each and every card component in the website\r\n * @returns a visual representation of the cards on the website\r\n */\r\n\r\nfunction Card(props) {\r\n    return (\r\n        <div>\r\n                {\r\n                    // Creating a custom card to display information on the Landing Page\r\n                }\r\n                <div className=\"card cardBorder\" style={cardStyle}>\r\n                    <div className=\"card-body\">\r\n                        {\r\n                            // Creating content by getting values from the parent element\r\n                        }\r\n                        <h2 style={{marginTop:\"-20px\", color:\"black\"}} className=\"center\">{props.name}</h2>\r\n                        <p style={{color:\"black\"}} className=\"card-text\">{props.bodyText}</p>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, {useEffect, useState, useMemo} from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport Card from '../../Components/Landingpage/Card'\r\nimport Header from '../../Components/Shared/Header/Header'\r\nimport Footer from '../../Components/Shared/Footer/Footer'\r\nimport './landingpage.css';\r\nimport { BrowserRouter, Route, Link, Router, Redirect } from \"react-router-dom\";\r\nimport {getProjects} from '../../Services/data-service';\r\n\r\n\r\n/** \r\n * Creating a dynamic layout for the landing page using a for loop.\r\n * This layout here decides how many columns or cards gets added to the layout for every row\r\n * @returns a JSX array element of the layout\r\n*/\r\n\r\nconst createLayout = (cards, rowlength) => {\r\n    console.log(\"Create Layout Called\")\r\n    const output = [];\r\n    for (let i = 0; i < cards.length; i = i + rowlength) {\r\n        const jsx = <Row className=\"justify-content-md-center\" key={i}>\r\n            {\r\n                [...Array(rowlength)].map((el, index) => {\r\n                    return (i) + index < cards.length ? (\r\n                        <Col sm=\"auto\" md=\"auto\" key={`${i}-${index}`}>\r\n                            <Link to={`/${cards[(i) + index].url}`}>\r\n                                <Card name={cards[(i) + index].name} bodyText={cards[(i) + index].bodyText}/>\r\n                            </Link>\r\n                        </Col> \r\n                    ) : null;\r\n                })\r\n\r\n            }\r\n        </Row>\r\n\r\n        output.push(jsx);\r\n        \r\n    }\r\n    return output;\r\n}    \r\n\r\n/**\r\n * The functional component describes the homepage of nimbus.\r\n * @returns a visual representation of nimbus homepage\r\n */\r\n\r\nfunction Landingpage() {\r\n\r\n    // Creating hook states to store the information of each card\r\n    console.log(\"Landing Page Rendered\")\r\n    const [projects, setProjects] = useState(null);\r\n    // Creating useEffect hook to render this component only once\r\n    useEffect(() => {\r\n        // Calling the method from the dummyCardsData json file to store all the values in the hook state\r\n        getProjects()\r\n        .then((res) => {console.log(res);\r\n            setProjects(res)\r\n        \r\n        })\r\n    }, [])\r\n\r\n    // Creating this constant using useMemo hook to re-render the webpage only if there is a change in the data stored in projects\r\n    const createdLayout = useMemo(() => {\r\n        console.log(projects)\r\n        if(projects?.length){\r\n            return createLayout(projects, 3)\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n    }, [projects])\r\n    console.log(createdLayout);\r\n\r\n    return (\r\n        \r\n        <div style={{height:\"100%\"}}>\r\n            <Header/>\r\n            <br></br>\r\n            {\r\n                //Creating a container to hold the rows and columns which are dynamically created\r\n            }\r\n            <Container fluid>\r\n                <h1 style={{textAlign:\"center\"}}>Welcome to GHD Advanced Analytics</h1>\r\n                <h3 className=\"center\">Explore all the tools on the Data Analytics Portal here</h3>\r\n                <br></br>\r\n                    {\r\n                        //Calling the createdLayout to render the rows and columns of data(cards)\r\n                    }\r\n                    {createdLayout}\r\n                   \r\n            </Container>\r\n            <Footer className=\"footer\"/>\r\n        </div>\r\n        \r\n    )\r\n};\r\n\r\nexport default Landingpage;\r\n","/**\r\n * A function to generate a fetch call to the dummyCardsData json file to retrieve the json data\r\n */\r\n\r\nexport const getProjects = () => {\r\n    return fetch(\"./dummyCardsData.json\")\r\n    .then((res)=>res.json())\r\n}\r\n\r\n","import React from 'react'\r\n\r\n/**\r\n * Describes the About component on the website\r\n * @returns a visual representation of the About Page\r\n */\r\n\r\nfunction about() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign:\"center\"}}>About</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default about\r\n","import React from 'react'\r\n\r\n/**\r\n * Describes the Contact Us component on the website\r\n * @returns a visual representation of the Contact Us Page\r\n */\r\n\r\nfunction contactUs() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign:\"center\"}}>Contact Us</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default contactUs\r\n","import React from 'react'\r\n\r\n/**\r\n * Describes the Infrastructure component on the website\r\n * @returns a visual representation of the Infrastructure Page\r\n */\r\n\r\nfunction infrastructure() {\r\n    return (\r\n        <div>\r\n            <h1 style={{textAlign:\"center\"}}>Infra Blogs</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default infrastructure\r\n","import React from 'react'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Header from '../../Components/Shared/Header/Header'\r\nimport Footer from '../../Components/Shared/Footer/Footer'\r\n\r\nfunction otherTools() {\r\n    return (\r\n        <div>\r\n            <Header/>\r\n            <br></br>\r\n            <h2 style={{textAlign:\"center\"}}>Other Tools</h2>\r\n            <Accordion defaultActiveKey=\"0\">\r\n                <Card>\r\n                    <Accordion.Toggle as={Card.Header} eventKey=\"0\">\r\n                    GHD InSite\r\n                    </Accordion.Toggle>\r\n                    <Accordion.Collapse eventKey=\"0\">\r\n                    <Card.Body>GHD InSite is a decision support tool with a map-based web interface to a data lake that stores multiple data for a given site or portfolio. Users will be able to explore all the data stored in this single integrated environment. Custom analyses can be performed, including running trend tests for concentrations, or fitting a single exponential decay function to a series of concentrations. Other products developed by GHD will be requestable and explorable through the tool, for example 3D models of the subsurface environment.</Card.Body>\r\n                    \r\n                    </Accordion.Collapse>\r\n                </Card>\r\n            </Accordion>\r\n            <Footer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default otherTools\r\n","import React from 'react';\r\nimport Nimbus from './Pages/NIMBUS/nimbus';\r\nimport Landingpage from './Pages/LandingPage/landingpage';\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport About from './Pages/About/about';\r\nimport ContactUs from './Pages/ContactUs/contactus';\r\nimport Infrastructure from './Pages/Infrastructure/infrastructure';\r\nimport otherTools from './Pages/Other tools/otherTools'\r\n\r\n/**\r\n * React Router component for this project\r\n * Desribes all the routes for the webpages\r\n * @returns the route to the webpage\r\n */\r\n\r\n\r\nfunction Router1() {\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/\" exact component={Landingpage}></Route>\r\n                    <Route path=\"/datamining\" component={Nimbus}></Route>\r\n                    <Route path=\"/about\" component={About}></Route>\r\n                    <Route path=\"/contactus\" component={ContactUs}></Route>\r\n                    <Route path=\"/infrablogs\"  component={Infrastructure}></Route>\r\n                    <Route path=\"/othertools\"  component={otherTools}></Route>\r\n                </Switch>\r\n             </BrowserRouter>\r\n        </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Router1\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Router1 from './router'\n\nReactDOM.render(\n  /**\n   * Rendering the default route(\"/\") which is defined in router.js\n   * Adding the rendered component to a div with ID as root in index.html\n   */\n  <React.StrictMode>\n    <Router1/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}